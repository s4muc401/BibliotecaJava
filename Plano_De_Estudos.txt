
2. **Semana 3-4: Estruturas de Controle e Arrays**
    - Estruturas condicionais (if, else, switch)
    - Estruturas de repetição (for, while, do-while)
    - Arrays (unidimensionais e multidimensionais)
3. **Recursos:**
    - Curso online: "Java Programming and Software Engineering Fundamentals" no Coursera
    - Livro: "Java: A Beginner's Guide" de Herbert Schildt

### **Mês 2: Conceitos Intermediários**
1. **Semana 1-2: Orientação a Objetos**
    - Classes e Objetos
    - Métodos e Construtores
    - Encapsulamento, Herança e Polimorfismo
2. **Semana 3-4: Manipulação de Strings e Exceções**
    - Manipulação de Strings
    - Tratamento de Exceções
    - Classes Wrapper e Autoboxing
3. **Recursos:**
    - Livro: "Head First Java" de Kathy Sierra e Bert Bates
    - Curso online: "Java Programming Masterclass" no Udemy

### **Mês 3: Estruturas de Dados e Coleções**
1. **Semana 1-2: Estruturas de Dados**
    - Listas (ArrayList, LinkedList)
    - Conjuntos (HashSet, TreeSet)
    - Filas (Queue, Deque)
    - Mapas (HashMap, TreeMap)
2. **Semana 3-4: Coleções e Generics**
    - Coleções (Collections Framework)
    - Generics
    - Iteradores e Comparadores
3. **Recursos:**
    - Livro: "Effective Java" de Joshua Bloch
    - Curso online: "Java Fundamentals: Collections" no Pluralsight

### **Mês 4: Programação Funcional e Multithreading**
1. **Semana 1-2: Programação Funcional**
    - Lambdas e Funcional Interfaces
    - Streams e Operações em Streams
    - Coletores (Collectors)
2. **Semana 3-4: Multithreading e Concorrência**
    - Threads e Runnable
    - Ciclo de Vida das Threads
    - Executor Framework, Futures e Callable
    - Classes de Concurrência (ConcurrentHashMap, CopyOnWriteArrayList)
3. **Recursos:**
    - Livro: "Java 8 in Action" de Raoul-Gabriel Urma
    - Livro: "Java Concurrency in Practice" de Brian Goetz

### **Mês 5: Entrada/Saída (I/O) e Frameworks**
1. **Semana 1-2: Manipulação de Arquivos e I/O**
    - Streams de I/O (FileInputStream, FileOutputStream)
    - Leitura e Escrita de Arquivos
    - NIO (New I/O)
    - Buffers, Channels e Selectors
2. **Semana 3-4: Consumo de APIs**
    - Introdução a APIs REST
    - Uso de bibliotecas como HttpURLConnection, OkHttp, e Retrofit
    - Manipulação de JSON com bibliotecas como Jackson e Gson
    - Autenticação e autorização em APIs
3. **Recursos:**
    - Curso online: "RESTful Web Services with Spring and Java" no Udemy
    - Documentação de bibliotecas específicas (OkHttp, Retrofit, Jackson, Gson)

### **Mês 6: Frameworks e Projeto Final**
1. **Semana 1-2: Spring Framework e Hibernate**
    - Fundamentos do Spring (IoC, DI)
    - Spring Boot
    - Criação de APIs RESTful com Spring
    - Mapeamento Objeto-Relacional (ORM) com Hibernate
2. **Semana 3-4: Projeto Final**
    - Escolha de um projeto que integre os conceitos aprendidos
    - Desenvolvimento do projeto
    - Revisão e refatoração do código
3. **Recursos:**
    - Livro: "Spring in Action" de Craig Walls
    - Curso online: "Spring Framework Masterclass" no Udemy

### **Mês 7: Boas Práticas e Padrões de Projeto**
1. **Semana 1-2: Boas Práticas e Design Patterns**
    - Padrões de Projeto (Singleton, Factory, Observer, etc.)
    - Clean Code e Refatoração
    - Testes Unitários (JUnit)
2. **Semana 3-4: Projeto Final**
    - Finalização do projeto integrado
    - Testes e validação do projeto
    - Documentação e apresentação do projeto
3. **Recursos:**
    - Livro: "Design Patterns: Elements of Reusable Object-Oriented Software" de Erich Gamma
    - Livro: "Clean Code" de Robert C. Martin

